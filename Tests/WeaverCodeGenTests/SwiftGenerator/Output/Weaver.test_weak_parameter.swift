/// This file is generated by Weaver 0.12.1
/// DO NOT EDIT!
// MARK: - FuuTest18
protocol FuuTest18InputDependencyResolver {
    var bar: BarTest18Protocol { get }
}
protocol FuuTest18DependencyResolver {
    var foo: BarTest18Protocol { get }
}
final class FuuTest18DependencyContainer: FuuTest18DependencyResolver {
    let bar: BarTest18Protocol
    private var _foo: BarTest18Protocol?
    var foo: BarTest18Protocol {
        if let value = _foo { return value }
        let dependencies = FooTest18DependencyContainer(injecting: self)
        let value = FooTest18(injecting: dependencies)
        _foo = value
        return value
    }
    init(injecting dependencies: FuuTest18InputDependencyResolver) {
        bar = dependencies.bar
        _ = foo
    }
}
extension FuuTest18DependencyContainer: FooTest18InputDependencyResolver {}
// MARK: - FooTest18
protocol FooTest18InputDependencyResolver {
    var bar: BarTest18Protocol { get }
}
protocol FooTest18DependencyResolver {
    var bar: BarTest18Protocol { get }
}
final class FooTest18DependencyContainer: FooTest18DependencyResolver {
    let bar: BarTest18Protocol
    init(injecting dependencies: FooTest18InputDependencyResolver) {
        bar = dependencies.bar
    }
}
// MARK: - BarTest18
protocol BarTest18InputDependencyResolver {
    var bar: BarTest18Protocol { get }
}
protocol BarTest18DependencyResolver {
    var fuu: FuuTest18 { get }
}
final class BarTest18DependencyContainer: BarTest18DependencyResolver {
    let bar: BarTest18Protocol
    private var _fuu: FuuTest18?
    var fuu: FuuTest18 {
        if let value = _fuu { return value }
        let dependencies = FuuTest18DependencyContainer(injecting: self)
        let value = FuuTest18(injecting: dependencies)
        _fuu = value
        return value
    }
    init(injecting dependencies: BarTest18InputDependencyResolver) {
        bar = dependencies.bar
        _ = fuu
    }
}
extension BarTest18DependencyContainer: FuuTest18InputDependencyResolver {}
