/// This file is generated by Weaver 0.12.3
/// DO NOT EDIT!
// MARK: - FuuTest14
final class FuuTest14DependencyContainer<T> {
    let fii: T
    init(fii: T) {
        self.fii = fii
    }
}
// MARK: - FooTest14
protocol FooTest14DependencyResolver {
    var fii: String { get }
    func fuu(fii: String) -> FuuTest14<String>
}
final class FooTest14DependencyContainer: FooTest14DependencyResolver {
    let fii: String
    private var _fuu: FuuTest14<String>?
    func fuu(fii: String) -> FuuTest14<String> {
        if let value = _fuu { return value }
        let dependencies = FuuTest14DependencyContainer(fii: fii)
        let value = FuuTest14<String>(injecting: dependencies)
        _fuu = value
        return value
    }
    init(fii: String) {
        self.fii = fii
        _ = fuu(fii: fii)
    }
}
